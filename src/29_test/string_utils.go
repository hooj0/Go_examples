package util

// --------------------------------------------------------------
// author:   hoojo
// email:    hoojo_@126.com
// github:   https://github.com/hooj0
// create:   2018-08-12
// copyright by hoojo@2018
// --------------------------------------------------------------



/* ---------------------------------------------------------------
package
==================================================================
自定义package 必须以最后一个为包名，如：fmt/util, 那么包名必须是 util
			 或者 如 net/http， 包名必须是 http
------------------------------------------------------------------
自定义package 必须在gopath目录中，
			 如：$ mkdir $GOPATH/src/github.com/user/util
------------------------------------------------------------------
自定义package 编译

	用 go build 命令来编译：
		$ go build github.com/user/util

	当然，若你在该包的源码目录中，只需执行：
		$ go build

这不会产生输出文件。
想要输出的话，必须使用 go install 命令，它会将包的对象放到工作空间的 pkg 目录中。
------------------------------------------------------------------
自定义package 当 package 构建完毕后，可以在其他地方导入包进行使用
自定义package 导入包

	import "github.com/user/util"

	使用其中的方法：
		util.Reverse("abc")
------------------------------------------------------------------
自定义package 在使用包后，进行安装主函数的方式，来安装依赖的util包

安装
	$ go install github.com/user/hello
	来安装 hello 程序时，string util 包也会被自动安装。

无论是安装包还是二进制文件，go 工具都会安装它所依赖的任何东西。

------------------------------------------------------------------*/

// Reverse 将其实参字符串以符文为单位左右反转。
func Reverse(s string) string {
	r := []rune(s)
	for i, j := 0, len(r)-1; i < len(r)/2; i, j = i+1, j-1 {
		r[i], r[j] = r[j], r[i]
	}
	return string(r)
}
