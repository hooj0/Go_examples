// --------------------------------------------------------------
// author:   hoojo
// email:    hoojo_@126.com
// github:   https://github.com/hooj0
// create:   2018-07-08
// copyright by hoojo@2018
// --------------------------------------------------------------

/* ---------------------------------------------------------------
numeric const
==================================================================
数值常量 用来存储数值的常量对象
------------------------------------------------------------------
常量 未指定类型的常量由上下文来决定其类型
数值常量 存放高精度的数值
------------------------------------------------------------------
int 类型最大可以存储一个 64 位的整数，有时会更小
int 可以存放最大64位的整数，根据平台不同有时会更少
------------------------------------------------------------------*/

package main

import "fmt"

const (
	// 通过将1位左移100位来创建一个巨大的数字。
	// 换句话说，二进制数为1，后跟100个零。
	Big   = 1 << 50
	// 再将它向右移动99个位置，所以我们最终得到1 << 1或2。
	Small = Big >> 49
)

func needInt(x int) int {
	return x * 10 + 1
}

func needFloat(x float64) float64 {
	return x * 0.1
}

func main() {
	fmt.Println("needInt: ", needInt(Big))
	fmt.Println("needInt: ", needInt(Small))
	fmt.Println("needFloat: ", needFloat(Big))

	//fmt.Printf("Big: %v, Small: %v \n", Big, Small)
}
