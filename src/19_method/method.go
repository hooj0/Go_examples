// --------------------------------------------------------------
// author:   hoojo
// email:    hoojo_@126.com
// github:   https://github.com/hooj0
// create:   2018-07-15
// copyright by hoojo@2018
// --------------------------------------------------------------



/* ---------------------------------------------------------------
method
==================================================================
方法 可以在struct结构体中声明定义，Go没有类
------------------------------------------------------------------
方法 就是一些带特殊“接收者”参数的的函数
方法 接受者位于 func关键字 和 方法名之间的
方法 接受者可以有自己的参数
------------------------------------------------------------------
方法 就是函数，方法只是个带接收者参数的函数
方法 和普通函数基本一模一样，唯一不同就是方法会带接受者
------------------------------------------------------------------*/
package main

import "fmt"

type Vertex struct {
	X, Y int
}

// 接受者位于 func关键字 和 方法名之间的
// Sum 方法拥有一个名为 v， 类型为 Vertex 的接收者
func (v Vertex) Sum() int {

	return v.X + v.Y
}

// 将接受者作为func 函数参数
func Add(v Vertex) int {

	return v.Y + v.X
}

func main() {

	// 声明结构体，设置结构体属性值
	ref := Vertex{ 3, 5 }

	// 通过结构体接受者调用方法
	fmt.Println("sum: ", ref.Sum()) // sum:  8

	// 在调用的时候，是直接调用方法，而非接受者去主动调用
	// 但功能无区别
	fmt.Println("add: ", Add(ref)) // add:  8
}
