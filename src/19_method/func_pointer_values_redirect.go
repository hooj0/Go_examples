// --------------------------------------------------------------
// author:   hoojo
// email:    hoojo_@126.com
// github:   https://github.com/hooj0
// create:   2018-07-16
// copyright by hoojo@2018
// --------------------------------------------------------------



/* ---------------------------------------------------------------
func pointer redirect values
==================================================================
方法指针重定向 在方法接受者为一个非指针参数时，在调用方法的时候传入指针或非指针都可以正常调用
------------------------------------------------------------------
方法指针重定向 在非指针接受者的情况下，既能接受指针参数，也可以接收非指针参数
函数指针重定向 在非指针参数情况下，能正常调用，但指针参数的时候，需要传入指针引用
------------------------------------------------------------------*/
package main

type Vertex struct {
	X, Y int
}

// 方法，传入接受者为非指针
func (v Vertex) ScaleMethod(i int) {
	v.X = v.X * i
	v.Y = v.Y * i
}

// 函数，非指针参数
func ScaleFunc(v Vertex, i int)  {
	v.X = v.X * i
	v.Y = v.Y * i
}

func main() {

	ref := Vertex{ 2, 3 }
	// 调用方法，传入非指针
	ref.ScaleMethod(2)

	// 调用函数，传入非指针参数
	ScaleFunc(ref, 3)

	// ---------------------------------------------------------
	pointer := &ref
	// 调用方法，传入指针
	pointer.ScaleMethod(3)	// 方法调用 pointer.ScaleMethod(3) 会被解释为 (*pointer).ScaleMethod(3)

	// 调用函数，传入指针参数
	// ScaleFunc(pointer, 4)		// 编译不通过
	ScaleFunc(*pointer, 4)		// 编译成功
}
