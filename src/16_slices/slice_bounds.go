// --------------------------------------------------------------
// author:   hoojo
// email:    hoojo_@126.com
// github:   https://github.com/hooj0
// create:   2018-07-10
// copyright by hoojo@2018
// --------------------------------------------------------------



/* ---------------------------------------------------------------
slice bounds
==================================================================
切片界限 切片的默认界限就是最大上限和最小下限的值
------------------------------------------------------------------
切片界限 在切片时利用默认行为来忽略上下界
切片界限 切片下界的默认值为 0，上界则是该切片的长度
------------------------------------------------------------------*/
package main

import "fmt"

func main() {

	arrays := []int { 1, 3, 7, 2, 9 , 4, 5, 6, 8 }

	// 下面的用法结果都一致
	fmt.Println("arrays[0:10] ->", arrays[0:9])	// arrays[0:10] -> [1 3 7 2 9 4 5 6 8]
	fmt.Println("arrays[:] ->", arrays[:]) 		// arrays[:] -> [1 3 7 2 9 4 5 6 8]
	fmt.Println("arrays[0:] ->", arrays[:]) 		// arrays[0:] -> [1 3 7 2 9 4 5 6 8]
	fmt.Println("arrays[:9] ->", arrays[:]) 		// arrays[:9] -> [1 3 7 2 9 4 5 6 8]

	fmt.Println("arrays[1:4]->", arrays[1:4])	// arrays[1:4]-> [3 7 2]
	fmt.Println("arrays[3:]->", arrays[3:])		// arrays[3:]-> [2 9 4 5 6 8]
	fmt.Println("arrays[:5]->", arrays[:5])		// arrays[:5]-> [1 3 7 2 9]
}
